/* Подключаем шрифт Rubik */
@import url('https://fonts.googleapis.com/css?family=Rubik:500');

/* Стили для всей страницы */
body {
    font-family: Arial, sans-serif; /* Базовый шрифт для текста на странице */
    display: flex; /* Используем flexbox для центрирования содержимого */
    flex-direction: column; /* Элементы внутри body выстраиваются вертикально */
    align-items: center; /* Центрируем содержимое по горизонтали */
    padding: 20px; /* Внутренний отступ от краёв страницы */
    background-color: #CCD1D9; /* Серый фон страницы (сохранён из вашего дизайна) */
}

/* Стили для контейнера заголовка (логотип + текст "Создание подписи") */
.header {
    display: flex; /* Flexbox для выравнивания логотипа и текста в строку */
    align-items: center; /* Вертикальное центрирование элементов внутри контейнера */
    margin-bottom: 20px; /* Отступ снизу от заголовка до формы */
}

/* Стили для логотипа в заголовке */
.header img {
    width: 171px; /* Ширина логотипа */
    height: 88px; /* Высота логотипа (совпадает с высотой canvas) */
    margin-right: 15px; /* Отступ справа от логотипа до текста */
}

/* Стили для текста заголовка "Создание подписи" */
.header h2 {
    margin: 0; /* Убираем стандартные отступы у заголовка */
    font-size: 24px; /* Размер шрифта заголовка */
    color: #FF6200; /* Оранжевый цвет текста (сохранён из оригинального дизайна) */
    font-family: 'Rubik', sans-serif; /* Шрифт Rubik (такой же, как у кнопки) */
    font-weight: 500; /* Начертание шрифта 500 (Medium) */
}

/* Стили для контейнера с полями ввода (форма) */
.input-container {
    display: flex; /* Flexbox для вертикального расположения полей */
    flex-direction: column; /* Поля располагаются друг под другом */
    align-items: center; /* Центрируем поля по горизонтали */
    gap: 15px; /* Расстояние между полями ввода */
    margin-bottom: 20px; /* Отступ снизу до кнопки */
}

/* Стили для группы ввода (лейбл + поле ввода) */
.form__group {
    position: relative; /* Для позиционирования лейбла */
    padding: 15px 0 0; /* Внутренние отступы */
    margin-top: 10px; /* Отступ сверху */
    width: 250px; /* Ширина совпадает с кнопкой */
    display: flex; /* Для выравнивания чекбокса и лейбла */
    align-items: center; /* Центрируем элементы по вертикали */
    gap: 8px; /* Добавляем небольшой отступ между чекбоксом и текстом */
    flex-wrap: nowrap; /* Запрещаем перенос элементов */
}

/* Специальный стиль для группы с чекбоксом */
.checkbox-group {
    margin: 20px 0; /* Увеличиваем отступы сверху и снизу */
}

/* Стили для текстовых полей ввода */
.form__field {
    font-family: 'Rubik', sans-serif; /* Шрифт Rubik, как у кнопки */
    width: 100%; /* Полная ширина */
    border: 0; /* Убираем стандартную рамку */
    border-bottom: 2px solid #9b9b9b; /* Подчёркивание серого цвета */
    outline: 0; /* Убираем стандартный контур при фокусе */
    font-size: 0.97rem; /* Размер шрифта */
    color: #333; /* Угольный цвет текста (между чёрным и серым) */
    padding: 7px 0; /* Внутренние отступы */
    background: transparent; /* Прозрачный фон */
    transition: border-color 0.2s; /* Плавное изменение цвета подчёркивания */
}

/* Плейсхолдер прозрачный (для эффекта плавающего лейбла) */
.form__field::placeholder {
    color: transparent;
}

/* Лейбл опускается вниз, если поле пустое */
.form__field:placeholder-shown ~ .form__label {
    font-size: 0.97rem; /* Размер шрифта */
    cursor: text; /* Курсор как для текста */
    top: 20px; /* Позиция внутри поля */
}

/* Стили для лейблов */
.form__label {
    position: absolute; /* Абсолютное позиционирование */
    top: 0; /* Позиция вверху */
    display: block; /* Блочный элемент */
    transition: 0.2s; /* Плавная анимация */
    font-size: 0.75rem; /* Размер шрифта */
    color: #333; /* Угольный цвет текста (между чёрным и серым) */
    font-family: 'Rubik', sans-serif; /* Шрифт Rubik, как у кнопки */
}

/* Стили для лейбла чекбокса */
.checkbox-label {
    font-family: 'Rubik', sans-serif; /* Шрифт Rubik, как у остальных элементов */
    font-size: 0.97rem; /* Размер шрифта, как у текстовых полей */
    color: #333; /* Угольный цвет текста */
    margin: 0; /* Убираем лишние отступы */
    line-height: 1; /* Для точного выравнивания */
    position: static; /* Отключаем абсолютное позиционирование */
    top: auto; /* Сбрасываем top */
    display: inline; /* Убедимся, что элемент ведёт себя как строчный */
}

/* Эффект при фокусе на поле ввода */
.form__field:focus {
    /* Стили для лейбла при фокусе */
    ~ .form__label {
        position: absolute; /* Абсолютное позиционирование */
        top: 0; /* Позиция вверху */
        display: block; /* Блочный элемент */
        transition: 0.2s; /* Плавная анимация */
        font-size: 0.75rem; /* Размер шрифта */
        color: #FF6200; /* Оранжевый цвет (сохранён из вашего дизайна) */
        font-weight: 700; /* Жирное начертание для лейбла */
    }
    padding-bottom: 6px; /* Отступ снизу для подчёркивания */
    border-width: 3px; /* Толщина подчёркивания */
    border-image: linear-gradient(to right, #FF6200, #e65c00); /* Градиент оранжевого цвета */
    border-image-slice: 1; /* Указываем, как резать градиент */
}

/* Сбрасываем тени для required и invalid полей */
.form__field:required,
.form__field:invalid {
    box-shadow: none;
}

/* Стили для нового чекбокса */
.checkbox-wrapper-7 {
    display: inline-flex; /* Убедимся, что контейнер чекбокса не сбивает flex */
    align-items: center; /* Выравниваем содержимое по центру */
    justify-content: center; /* Центрируем чекбокс внутри */
}

.checkbox-wrapper-7 .tgl {
    display: none; /* Скрываем стандартный чекбокс */
}

.checkbox-wrapper-7 .tgl,
.checkbox-wrapper-7 .tgl:after,
.checkbox-wrapper-7 .tgl:before,
.checkbox-wrapper-7 .tgl *,
.checkbox-wrapper-7 .tgl *:after,
.checkbox-wrapper-7 .tgl *:before,
.checkbox-wrapper-7 .tgl + .tgl-btn {
    box-sizing: border-box; /* Учитываем padding и border в размерах */
}

.checkbox-wrapper-7 .tgl::-moz-selection,
.checkbox-wrapper-7 .tgl:after::-moz-selection,
.checkbox-wrapper-7 .tgl:before::-moz-selection,
.checkbox-wrapper-7 .tgl *::-moz-selection,
.checkbox-wrapper-7 .tgl *:after::-moz-selection,
.checkbox-wrapper-7 .tgl *:before::-moz-selection,
.checkbox-wrapper-7 .tgl + .tgl-btn::-moz-selection,
.checkbox-wrapper-7 .tgl::selection,
.checkbox-wrapper-7 .tgl:after::selection,
.checkbox-wrapper-7 .tgl:before::selection,
.checkbox-wrapper-7 .tgl *::selection,
.checkbox-wrapper-7 .tgl *:after::selection,
.checkbox-wrapper-7 .tgl *:before::selection,
.checkbox-wrapper-7 .tgl + .tgl-btn::selection {
    background: none; /* Убираем выделение текста */
}

.checkbox-wrapper-7 .tgl + .tgl-btn {
    outline: 0; /* Убираем стандартный outline */
    display: block; /* Блочный элемент */
    width: 2.4em; /* Ширина чекбокса */
    height: 1.2em; /* Высота чекбокса */
    position: relative; /* Относительное позиционирование */
    cursor: pointer; /* Курсор "рука" */
    -webkit-user-select: none; /* Запрещаем выделение */
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
}

.checkbox-wrapper-7 .tgl + .tgl-btn:after,
.checkbox-wrapper-7 .tgl + .tgl-btn:before {
    position: relative; /* Относительное позиционирование */
    display: block; /* Блочный элемент */
    content: ""; /* Пустой контент */
    width: 50%; /* Ширина ползунка */
    height: 100%; /* Полная высота */
}

.checkbox-wrapper-7 .tgl + .tgl-btn:after {
    left: 0; /* Начальная позиция ползунка */
}

.checkbox-wrapper-7 .tgl + .tgl-btn:before {
    display: none; /* Скрываем псевдоэлемент :before */
}

.checkbox-wrapper-7 .tgl:checked + .tgl-btn:after {
    left: 50%; /* Ползунок сдвигается вправо при активации */
}

.checkbox-wrapper-7 .tgl-ios + .tgl-btn {
    background: #fbfbfb; /* Фон переключателя в неактивном состоянии */
    border-radius: 1.2em; /* Скругление углов */
    padding: 1.2px; /* Внутренний отступ */
    transition: all 0.4s ease; /* Плавная анимация */
    border: 1px solid #e8eae9; /* Тонкая серая рамка */
}

.checkbox-wrapper-7 .tgl-ios + .tgl-btn:after {
    border-radius: 1.2em; /* Скругление углов ползунка */
    background: #fbfbfb; /* Фон ползунка */
    transition: left 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), padding 0.3s ease, margin 0.3s ease; /* Анимация движения */
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 2.4px 0 rgba(0, 0, 0, 0.08); /* Тень для эффекта объёта */
}

.checkbox-wrapper-7 .tgl-ios + .tgl-btn:hover:after {
    will-change: padding; /* Оптимизация анимации */
}

.checkbox-wrapper-7 .tgl-ios + .tgl-btn:active {
    box-shadow: inset 0 0 0 2em #e8eae9; /* Эффект нажатия */
}

.checkbox-wrapper-7 .tgl-ios + .tgl-btn:active:after {
    padding-right: 0.48em; /* Эффект сжатия ползунка */
}

.checkbox-wrapper-7 .tgl-ios:checked + .tgl-btn {
    background: #FF6200; /* Оранжевый цвет в активном состоянии */
}

.checkbox-wrapper-7 .tgl-ios:checked + .tgl-btn:active {
    box-shadow: none; /* Убираем тень при нажатии в активном состоянии */
}

.checkbox-wrapper-7 .tgl-ios:checked + .tgl-btn:active:after {
    margin-left: -0.48em; /* Эффект сжатия ползунка в активном состоянии */
}

/* Скрытие поля мобильного телефона, когда чекбокс не отмечен */
#mobileGroup.hidden {
    visibility: hidden; /* Делает блок невидимым, но он продолжает занимать место */
}

/* Стили для canvas (холста), где отображается сгенерированная подпись */
#signature {
    border: 1px solid #ccc; /* Тонкая серая рамка вокруг холста */
    margin-top: 20px; /* Отступ сверху от кнопки */
}

/* Стили для кнопки "Создать подпись" */
.button {
    padding: 16px 42px; /* Внутренние отступы кнопки (вертикаль/горизонталь) */
    border-radius: 3px; /* Скругление углов кнопки */
    box-shadow: 0px 0px 12px -2px rgba(0, 0, 0, 0.5); /* Тень для эффекта объёта */
    line-height: 1.25; /* Высота строки текста внутри кнопки */
    background: #FF6200; /* Оранжевый фон кнопки (сохранён из оригинального дизайна) */
    text-decoration: none; /* Убираем подчёркивание (для совместимости, если кнопка — ссылка) */
    user-select: none; /* Запрещаем выделение текста кнопки */
    color: white; /* Белый цвет текста */
    font-size: 16px; /* Размер шрифта текста кнопки */
    font-family: 'Rubik', sans-serif; /* Шрифт Rubik для текста кнопки */
    letter-spacing: .08em; /* Межбуквенный интервал для улучшения читаемости */
    text-transform: uppercase; /* Текст кнопки в верхнем регистре */
    position: relative; /* Относительное позиционирование для псевдоэлемента ::after */
    transition: background-color .6s ease; /* Плавное изменение цвета фона при наведении */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки (для эффекта волны) */
    border: none; /* Убираем стандартную обводку кнопки */
    cursor: pointer; /* Курсор "рука" при наведении */
}

/* Псевдоэлемент ::after для создания эффекта "волны" при нажатии */
.button::after {
    content: ""; /* Пустой контент, так как это псевдоэлемент */
    position: absolute; /* Абсолютное позиционирование относительно кнопки */
    width: 0; /* Начальная ширина круга (0) */
    height: 0; /* Начальная высота круга (0) */
    top: 50%; /* Начальная позиция по вертикали (центр кнопки) */
    left: 50%; /* Начальная позиция по горизонтали (центр кнопки) */
    top: var(--mouse-y); /* Переопределяем позицию по Y на основе координаты клика */
    left: var(--mouse-x); /* Переопределяем позицию по X на основе координаты клика */
    transform-style: flat; /* Устанавливаем стиль трансформации (для совместимости) */
    transform: translate3d(-50%, -50%, 0); /* Центрируем круг относительно точки клика */
    background: rgba(255, 255, 255, 0.1); /* Полупрозрачный белый фон для эффекта волны */
    border-radius: 100%; /* Делаем элемент круглым */
    transition: width .3s ease, height .3s ease; /* Плавное увеличение размеров круга */
}

/* Стили для кнопки при наведении курсора или фокусе */
.button:focus,
.button:hover {
    background: #e65c00; /* Более тёмный оранжевый цвет при наведении */
}

/* Эффект волны при нажатии на кнопку */
.button:active::after {
    width: 300px; /* Увеличиваем ширину круга до 300px */
    height: 300px; /* Увеличиваем высоту круга до 300px */
}

/* прыгалка */
body {
    min-height: 100vh; /* Минимальная высота страницы */
    position: relative; /* Для позиционирования стрелки */
}

.arrow {
    position: absolute; /* Абсолютное позиционирование */
    bottom: 20px; /* Отступ от низа */
    left: 50%; /* Центрирование по горизонтали */
    transform: translateX(-50%); /* Точное центрирование */
    width: 40px;
    height: 40px;
    background-image: url('../img/arrow.svg'); /* Путь к файлу */
    background-size: contain;
}

.bounce {
    animation: bounce 2s infinite;
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-30px);
    }
    60% {
        transform: translateY(-15px);
    }
}
